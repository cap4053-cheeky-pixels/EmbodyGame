using System.Collections; using System.Collections.Generic; using UnityEngine;  public class Possession : MonoBehaviour {     private Player player;      //flag to test if user has pressed space in the previous frame     private bool canPossess = true;      //should be kept at 1     [SerializeField]     private float possessionRadius = 1.0f;      // Start is called before the first frame update     void Start()     {         player = gameObject.GetComponent<Player>();     }      // Update is called once per frame      void Update()     {         /* This means the player has not been holding down space in the previous frame          * We do not want a player to simply hold space and possess any possessable enemy it          * comes in contact with         */         if (canPossess && Input.GetAxis("Possess") != 0)         {             canPossess = false;             TakePossessionAction(FindEnemytoPossess());         }         //space not being pressed         else if (Input.GetAxis("Possess") == 0)             canPossess = true;     }      //this function takes a GameObject argument, the player possesses the passed GameObject     void TakePossessionAction(GameObject enemy)     {         if (enemy == null)             return;          player.MaxHealth = enemy.GetComponent<Enemy>().MaxHealth;         player.Health = enemy.GetComponent<Enemy>().MaxHealth;          // Clone the enemy model within the player         GameObject newModel = GameObject.Instantiate(enemy.GetComponent<Entity>().model, transform);         GameObject currentPlayerModel = player.model;          // Possess the enemy weapon         GameObject playerWeapon = player.weapon;         GameObject enemyWeapon = enemy.GetComponent<Enemy>().weapon;         GameObject newWeapon = GameObject.Instantiate(enemyWeapon, transform);          player.SetModel(newModel);         player.SetWeapon(newWeapon);          // Cleanup         Destroy(currentPlayerModel);         Destroy(playerWeapon);         Destroy(enemy);      }      //called to find the nearest enemy attached to this component     GameObject FindEnemytoPossess(){                  Collider[] checkWhoNearby = Physics.OverlapSphere(transform.position, possessionRadius);          //tracks the shortest distance between a given collider and the player         float distance = 0;         GameObject nearestEnemy = null;          foreach (Collider other in checkWhoNearby)          {             float currentdistance = 0;             if (other.gameObject.tag != "Enemy")                 continue;             if (!other.gameObject.GetComponent<Enemy>().isPossessable)                 continue;              currentdistance = Vector3.Distance(other.gameObject.transform.position, transform.position);             if (distance == 0)             {                 nearestEnemy = other.gameObject;                 distance = currentdistance;             }             else if (currentdistance < distance)             {                 distance = currentdistance;                 nearestEnemy = other.gameObject;             }          }         return nearestEnemy;     }  } 